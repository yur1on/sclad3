document.addEventListener('DOMContentLoaded', function() {
    const deviceInput = document.getElementById('device');
    const brandInput = document.getElementById('brand');
    const modelInput = document.getElementById('model');

    deviceInput.addEventListener('input', function() {
        const selectedDevice = deviceInput.value;
        brandInput.value = '';
        modelInput.value = '';
        clearDatalist('brands');
        clearDatalist('models');

        if (selectedDevice) {
            fetch(`/get-brands/?device=${selectedDevice}`)
                .then(response => response.json())
                .then(data => {
                    populateDatalist('brands', data.brands);
                });
        }
    });

    brandInput.addEventListener('input', function() {
        const selectedBrand = brandInput.value;
        const selectedDevice = deviceInput.value;  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–æ–∂–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—á—Ç–µ–Ω–æ

        modelInput.value = '';
        clearDatalist('models');

        if (selectedBrand) {
            fetch(`/get-models/?brand=${selectedBrand}&device=${selectedDevice}`)  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∏ –±—Ä–µ–Ω–¥
                .then(response => response.json())
                .then(data => {
                    populateDatalist('models', data.models);
                });
        }
    });

    function populateDatalist(id, items) {
        const datalist = document.getElementById(id);
        datalist.innerHTML = '';
        items.forEach(function(item) {
            const option = document.createElement('option');
            option.value = item;
            datalist.appendChild(option);
        });
    }

    function clearDatalist(id) {
        const datalist = document.getElementById(id);
        datalist.innerHTML = '';
    }
});


document.addEventListener('DOMContentLoaded', function() {
    const deviceButtonsContainer = document.getElementById('device-buttons-container');
    const brandButtonsContainer = document.getElementById('brand-buttons-container');
    const modelButtonsContainer = document.getElementById('model-buttons-container');
    const partTypeButtonsContainer = document.getElementById('part-type-buttons-container');

    const deviceButtons = document.getElementById('device-buttons');
    const brandButtons = document.getElementById('brand-buttons');
    const modelButtons = document.getElementById('model-buttons');
    const partTypeButtons = document.getElementById('part-type-buttons');

    let selectedDevice = '';
    let selectedBrand = '';
    let selectedModel = '';

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    fetch('/get-devices/')
        .then(response => response.json())
        .then(data => {
            populateButtons(deviceButtons, data.devices, handleDeviceClick);
        });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    function handleDeviceClick(device) {
        selectedDevice = device;
        brandButtons.innerHTML = '';  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –±—Ä–µ–Ω–¥–æ–≤
        modelButtonsContainer.style.display = 'none';
        partTypeButtonsContainer.style.display = 'none';

        fetch(`/get-brands/?device=${device}`)
            .then(response => response.json())
            .then(data => {
                brandButtonsContainer.style.display = 'block';
                populateButtons(brandButtons, data.brands, handleBrandClick);
            });

        setActiveButton(deviceButtons, device);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –±—Ä–µ–Ω–¥
    function handleBrandClick(brand) {
        selectedBrand = brand;
        modelButtons.innerHTML = '';  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –º–æ–¥–µ–ª–µ–π

        fetch(`/get-models/?device=${selectedDevice}&brand=${brand}`)
            .then(response => response.json())
            .then(data => {
                modelButtonsContainer.style.display = 'block';
                populateButtons(modelButtons, data.models, handleModelClick, true);  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–µ–π
            });

        setActiveButton(brandButtons, brand);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –º–æ–¥–µ–ª—å
    function handleModelClick(model) {
        selectedModel = model;
        partTypeButtons.innerHTML = '';  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ —Ç–∏–ø–æ–≤ –∑–∞–ø—á–∞—Å—Ç–µ–π

        fetch(`/get-part-types/?device=${selectedDevice}&brand=${selectedBrand}&model=${model}`)
            .then(response => response.json())
            .then(data => {
                partTypeButtonsContainer.style.display = 'block';
                populateButtons(partTypeButtons, data.part_types, handlePartTypeClick, true);  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –∑–∞–ø—á–∞—Å—Ç–µ–π
            });

        setActiveButton(modelButtons, model);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ç–∏–ø –∑–∞–ø—á–∞—Å—Ç–∏
    function handlePartTypeClick(partType) {
        fetch(`/get-parts/?device=${selectedDevice}&brand=${selectedBrand}&model=${selectedModel}&part_type=${partType}`)
            .then(response => response.json())
            .then(data => {
                displayParts(data.parts);  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–∞–±–ª–∏—Ü—É –∑–∞–ø—á–∞—Å—Ç–µ–π
            });

        setActiveButton(partTypeButtons, partType);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    function populateButtons(container, items, clickHandler, isCompact = false) {
        container.innerHTML = '';  // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫–Ω–æ–ø–æ–∫

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
        items.sort((a, b) => a.localeCompare(b));

        items.forEach(item => {
            const button = document.createElement('button');
            button.classList.add('btn', 'btn-primary', 'me-2', 'mb-2');  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫

            if (isCompact) {
                button.classList.add('btn-compact');  // –î–æ–±–∞–≤–ª—è–µ–º 'btn-compact' –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–µ–ª–µ–π –∏ —Ç–∏–ø–æ–≤ –∑–∞–ø—á–∞—Å—Ç–µ–π
            }

            button.textContent = item;
            button.addEventListener('click', () => clickHandler(item));
            container.appendChild(button);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ (–ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏–µ)
    function setActiveButton(container, selectedItem) {
        // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å "btn-active" —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        Array.from(container.children).forEach(button => {
            button.classList.remove('btn-active');
            button.classList.add('btn-primary');
        });

        // –î–æ–±–∞–≤–ª—è–µ–º "btn-active" —Ç–æ–ª—å–∫–æ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        const selectedButton = Array.from(container.children).find(button => button.textContent === selectedItem);
        if (selectedButton) {
            selectedButton.classList.remove('btn-primary');
            selectedButton.classList.add('btn-active');  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π –∫–ª–∞—Å—Å
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ (–Ω–µ —Ç—Ä–æ–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏)
    function displayParts(parts) {
        const tbody = document.querySelector('#parts-table tbody');
        tbody.innerHTML = '';  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã

        parts.forEach(part => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${part.device}</td>
                <td>${part.brand}</td>
                <td>${part.model}</td>
                <td>${part.part_type}</td>
                <td>${part.color || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                <td>${part.quantity}</td>
                <td>${part.price}</td>
                <td>
                    ${part.images.length ? part.images.map(image => `
                        <a href="${image.image_url}" target="_blank">
                            <img src="${image.image_url}" alt="${part.model}" class="img-thumbnail" style="max-width: 80px; max-height: 80px;">
                        </a>
                    `).join('') : '–ù–µ—Ç —Ñ–æ—Ç–æ'}
                </td>
                <td>
                    <a href="/edit-part/${part.id}/" class="btn btn-warning btn-sm mb-1">‚úèÔ∏è</a>
                    <a href="/delete-part/${part.id}/" class="btn btn-danger btn-sm">üóëÔ∏è</a>
                </td>
            `;
            tbody.appendChild(row);
        });
    }
});
